<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:res="clr-namespace:FF.Cockpit.Theme.Custom_Resources">

    <!--#region Custom DataGrid Style -->

    <Style x:Key="WrapTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="BaseCustomDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" >
        <Setter Property="Background" Value="{DynamicResource BrownBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <!--<Setter Property="FontFamily" Value="Roboto"/>-->
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--<Setter Property="TextBlock.TextWrapping" Value="Wrap"/>-->
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 0 0 0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="Auto"/>

    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PerformanceColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource BaseCustomDataGridColumnHeaderStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}"  >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="DataGridCellGrid" Background="{TemplateBinding Background}" 
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}" 
                             HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                            <ContentPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                               VerticalAlignment="Center" DockPanel.Dock="Left" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
                        </Border>
                        
                        <!--<Path x:Name="SortArrow" Grid.ColumnSpan="2" HorizontalAlignment="Right"
                              VerticalAlignment="Center"                                           
                              Width="8" Height="6" Margin="4,0,2,0"
                              Stretch="Fill" Opacity="0.5" Fill="White"
                              RenderTransformOrigin="0.5,0.4"
                              Visibility="Visible"
                              Data="M0,0 L1,0 0.5,1 z" />-->

                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <!--<Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CustomDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource BaseCustomDataGridColumnHeaderStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}"  >
                    <Grid>
                       
                        <Border x:Name="DataGridCellGrid" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                            <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                <ContentPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                                  DockPanel.Dock="Left" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
                                <Path x:Name="SortArrow" HorizontalAlignment="Right"
                                            VerticalAlignment="Center"                                           
                                            Width="10" Height="6" Margin="20,0,0,0"
                                            Stretch="Fill" Opacity="0.5" Fill="White"
                                            RenderTransformOrigin="0.5,0.4"
                                            Visibility="Visible"
                                            Data="M0,0 L1,0 0.5,1 z" />
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConfigurationDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource BaseCustomDataGridColumnHeaderStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border x:Name="DataGridCellGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Height="36" Margin="12,0,10,0">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomDataGridRowStyle" TargetType="{x:Type DataGridRow}" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Padding" Value="2 0"/>
    </Style>

    <Style x:Key="ConfigurationDataGridRowStyle" TargetType="{x:Type DataGridRow}" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Padding" Value="2 0"/>
        <Setter Property="Margin" Value="10 0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHoverBrush}" />
            </Trigger>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CustomDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 0"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="Padding" Value="10 1 0 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="DataGridCellGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Margin="0 1 0 0">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <!--<Setter TargetName="DataGridCellGrid" Property="Background" Value="{DynamicResource LightBlackBrush}"/>-->
                            <!--<Setter TargetName="DataGridCellGrid" Property="BorderBrush" Value="{StaticResource GrayLightColor}"/>-->
                            <!--<Setter TargetName="DataGridCellGrid" Property="TextBlock.Foreground" Value="White"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomDataGridStyle" TargetType="DataGrid">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="Auto"/>
        <!--<Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActualHeight}"/>-->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="VerticalAlignment" Value="Top"/>-->
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <!--<Setter Property="ColumnHeaderStyle" Value="{StaticResource CustomDataGridColumnHeaderStyle}"/>-->
        <Setter Property="RowStyle" Value="{StaticResource CustomDataGridRowStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource CustomDataGridCellStyle}"/>
    </Style>

    <!--#endregion-->

    <Style TargetType="DataGridRow" x:Key="DataGridRowHoverStyle">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource AccentColor}"/>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHoverBrush}" />

            </Trigger>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>

        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="DarkGray"/>
        <Setter Property="RowBackground" Value="{DynamicResource WorkBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource WorkBackgroundBrush}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource HeaderBackgroundBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource HeaderBackgroundBrush}"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="Margin" Value="20"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="FontSize" Value="16"/>

        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ColumnHeaderHeight" Value="40"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="MinRowHeight" Value="35"/>
        <Setter Property="RowHeaderWidth" Value="1"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DataGridColumnHeaderStyle}"/>
        <Setter Property="CellStyle" Value="{DynamicResource DataGridCellStyle}"/>

    </Style>
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 0"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="Padding" Value="10 1 0 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="DataGridCellGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Margin="0 1 0 0">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <!--<Setter TargetName="DataGridCellGrid" Property="Background" Value="{DynamicResource LightBlackBrush}"/>-->
                            <!--<Setter TargetName="DataGridCellGrid" Property="BorderBrush" Value="{StaticResource GrayLightColor}"/>-->
                            <!--<Setter TargetName="DataGridCellGrid" Property="TextBlock.Foreground" Value="White"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle" BasedOn="{x:Null}" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource HeaderBackgroundBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource HeaderBackgroundBrush}"/>
        <Setter Property="Padding" Value="2,0,30,0"/>
    </Style>
    <Style x:Key="Operational_DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="DarkGray"/>
        <Setter Property="RowBackground" Value="#212529"/>
        <Setter Property="BorderBrush" Value="{DynamicResource WorkBackgroundBrush}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#303030"/>
        <Setter Property="VerticalGridLinesBrush" Value="#303030"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="Margin" Value="20,10,20,0"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ColumnHeaderHeight" Value="40"/>
        <Setter Property="ColumnWidth" Value="Auto"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="MinRowHeight" Value="35"/>
        <Setter Property="RowHeaderWidth" Value=".1"/>
        <Setter Property="BorderThickness" Value=".1"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DataGridColumnHeaderStyle}"/>
    </Style>
    <Style x:Key="OpeartionalTab_CustomDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource BaseCustomDataGridColumnHeaderStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border x:Name="DataGridCellGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" CornerRadius="5">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OperationalTab_DataGridRowHoverStyle" TargetType="DataGridRow">
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Red"/>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHoverBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <!-- Set the background color directly to red -->
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRow" x:Key="PerformanceTab_DataGridRowHoverStyle">
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource AccentColor}"/>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHoverBrush}" />

            </Trigger>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>