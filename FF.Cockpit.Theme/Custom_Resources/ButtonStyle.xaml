<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:res="clr-namespace:FF.Cockpit.Theme.Custom_Resources"
                    xmlns:con="clr-namespace:FF.Cockpit.Theme.Converters">
    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="pack://application:,,,/FF.Cockpit.Theme;component/Custom_Resources/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/FF.Cockpit.Theme;component/Custom_Resources/Brushes.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/FF.Cockpit.Theme;component/Converters/MultiValueEqualityConverter.xaml" />-->

    </ResourceDictionary.MergedDictionaries>
    <con:MultiValueEqualityConverter x:Key="MultiValueEqualityConverter"/>
    
    <Style x:Key="FotoFinderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Background"  Value="{DynamicResource WorkBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template" Value="{DynamicResource FotoFinderButtonTemplate}"/>
    </Style>
    
    <ControlTemplate x:Key="FotoFinderButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="RootGrid" RenderTransformOrigin="0.5,0.5" Background="{TemplateBinding Background}">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="scale" ScaleX="1" ScaleY="1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.150" />
                        <VisualTransition To="Pressed" />
                        <VisualTransition From="Pressed" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX"/>
                            <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY"/>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalElement" BorderBrush="{DynamicResource ForegroundBrush}" BorderThickness="1" />
            <Border x:Name="MouseOverElement" BorderBrush="{DynamicResource ForegroundBrush}" BorderThickness="2" Background="{DynamicResource RedBrush}" Opacity="0" />
            <ContentPresenter x:Name="ContentHost" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
    </ControlTemplate>

    <!--MinWidth="88" MaxWidth="160" Height="30" Margin="5,0"-->
    <Style x:Key="CustomMessageBoxButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="88"/>
        <Setter Property="MaxWidth" Value="160"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource CustomMessageBoxButtonStyleTemplate}"/>
    </Style>
    <ControlTemplate x:Key="CustomMessageBoxButtonStyleTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="RootGrid" RenderTransformOrigin="0.5,0.5" Background="{TemplateBinding Background}">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="scale" ScaleX="1" ScaleY="1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.150" />
                        <VisualTransition To="Pressed" />
                        <VisualTransition From="Pressed" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX"/>
                            <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY"/>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalElement" BorderBrush="{DynamicResource BrownBrush}" BorderThickness="1.5" CornerRadius="15"/>
            <Border x:Name="MouseOverElement" BorderBrush="{DynamicResource ForegroundBrush}" BorderThickness="2" Background="{DynamicResource RedBrush}" Opacity="0" CornerRadius="15"/>
            <ContentPresenter x:Name="ContentHost" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
    </ControlTemplate>
    
    
    <Style x:Key="CustomImageButtonStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="root"
                            BorderThickness="{TemplateBinding Margin}" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Tag="{TemplateBinding Tag}"
                            Margin="{TemplateBinding Margin}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <Image res:ImageHelper.SourceResourceKey="{Binding ElementName=root,Path=Tag}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OpacityButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="Transparent">
                        <ContentPresenter
              x:Name="cp"
              Opacity="0.5"
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True" >
                            <Setter TargetName="cp" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="cp" Storyboard.TargetProperty="Opacity" To="1.0" Duration="00:00:00.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="cp" Storyboard.TargetProperty="Opacity" Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="cp" Storyboard.TargetProperty="Opacity" To="0.1" Duration="00:00:00.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="cp" Storyboard.TargetProperty="Opacity" Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="AntiqueWhite"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="7"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock  VerticalAlignment="Center" Foreground="DarkGray" HorizontalAlignment="Center"  Margin="0"  x:Name="tb" >

                        <TextBlock.TextDecorations>
                            <TextDecoration>
                                <TextDecoration.Pen>
                                    <Pen Brush="Black" />
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextBlock.TextDecorations>
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <!--<Setter Property="Foreground" Value="Red"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DialogWindowButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="BorderThickness" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="8,8,8,8" BorderThickness="2,2,2,2" Background="Black" BorderBrush="LightGray" Margin="0,0,6,0" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="MinWidth" Value="110"/>
        <Setter Property="MaxHeight" Value="24"/>
        <Setter Property="FontFamily" Value="Segoe UI Light"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border x:Name="borderPanel"  BorderThickness="0"
                            Background="{DynamicResource RedBrush}" CornerRadius="12">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="FilterButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="MinWidth" Value="110"/>
        <Setter Property="MaxHeight" Value="24"/>
        <Setter Property="FontFamily" Value="Segoe UI Light"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="HorizontalAlignment" Value="left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border x:Name="borderPanel"  BorderThickness="0"
                                Background="{DynamicResource TileBackgroundBrush}"
                        CornerRadius="12">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                    <Binding Path="SelectedFilter"/>
                                    <Binding RelativeSource="{RelativeSource Self}" Path="Uid"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter TargetName="borderPanel"  Property="Background" Value="Red"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>