<UserControl x:Class="FF.Cockpit.UI.Views.UserControls.Configuration.MiscellaneousConfigurationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:localization="clr-namespace:FF.Cockpit.Common.Properties;assembly=FF.Cockpit.Common"
             xmlns:common="clr-namespace:FF.Cockpit.Common;assembly=FF.Cockpit.Common"
             xmlns:local="clr-namespace:FF.Cockpit.UI.Views.UserControls.Configuration"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:viewmodels="clr-namespace:FF.Cockpit.UI.ViewModels" 
             xmlns:converter="clr-namespace:FF.Cockpit.Theme.Converters;assembly=FF.Cockpit.Theme"
             d:DataContext="{d:DesignInstance Type=viewmodels:ConfigurationViewModel}"
             mc:Ignorable="d" >
    <UserControl.Resources>
        <converter:InvertBoolConverter x:Key="InvertBooleanConverter" />
    </UserControl.Resources>

    <Grid>
        <Border Background="{DynamicResource TileBackgroundBrush}" CornerRadius="3">
            <Border.Effect>
                <DropShadowEffect/>
            </Border.Effect>
            <Grid Margin="0 20 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="33*"/>
                    <RowDefinition Height="33*"/>
                    <RowDefinition Height="33*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="49*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="49*"/>
                </Grid.ColumnDefinitions>

                <GroupBox Grid.Row="0" Grid.Column="0" Header="{x:Static localization:Resources.MiscellaneousSchedulerSettingHeader_resx}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30*"/>
                            <ColumnDefinition Width="70*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25*"/>
                            <RowDefinition Height="25*"/>
                            <RowDefinition Height="25*"/>
                            <RowDefinition Height="25*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static localization:Resources.MiscellaneousStartHour_resx}" FontSize="14" VerticalAlignment="Center"/>
                        <ComboBox Grid.Row="0" Grid.Column="1" IsEditable="True" x:Name="starthourList"
                                  DisplayMemberPath="Value"
                                  SelectedValuePath="Key"
                                  SelectedValue="{Binding SelectedStartHour,UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"  
                                  Padding="3 0 0 0" Background="#373E46" 
                                  BorderBrush="Gray" FontWeight="Normal" FontSize="14" Margin="4"
                                  SelectionChanged="starthourList_SelectionChanged">
                        </ComboBox>


                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static localization:Resources.MiscellaneousEndHour_resx}"  FontSize="14" VerticalAlignment="Center"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" IsEditable="True" x:Name="endhourList"
                                  DisplayMemberPath="Value"
                                  SelectedValuePath="Key"
                                  SelectedValue="{Binding SelectedEndHour,UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"  
                                  Padding="3 0 0 0" Background="#373E46" 
                                  BorderBrush="Gray" FontWeight="Normal" FontSize="14" Margin="4"
                                  SelectionChanged="endhourList_SelectionChanged">
                        </ComboBox>

                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static localization:Resources.MiscellaneousTextBox_WeekFirstDay_resx}" FontSize="14" VerticalAlignment="Center"/>
                        <ComboBox Grid.Row="2" Grid.Column="1" IsEditable="True" x:Name="dayOfWeekList"
                                  SelectedValue="{Binding SelectedDayOfWeek,UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"  
                                  Padding="3 0 0 0" Background="#373E46" 
                                  BorderBrush="Gray" FontWeight="Normal" FontSize="14" Margin="4">
                        </ComboBox>

                        <DockPanel Grid.Row="3" Grid.ColumnSpan="2">
                            <TextBlock x:Name="errorMessage" DockPanel.Dock="Left" Foreground="Red" TextWrapping="WrapWithOverflow"/>
                            <Border BorderBrush="{DynamicResource BrownBrush}" BorderThickness="1.5" CornerRadius="15" 
                                    Cursor="Hand" Height="30" Width="90" HorizontalAlignment="Right" Margin="0 0 5 0">
                                <TextBlock Text="{x:Static localization:Resources.MiscellaneousBtn_Save_resx}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <i:InvokeCommandAction Command="{Binding SaveSettingCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Red"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding ElementName=errorMessage,Path=Text}" Value="">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=errorMessage,Path=Text}" Value="{x:Null}">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </DockPanel>

                    </Grid>

                </GroupBox>

                <GroupBox Grid.Row="0" Grid.Column="2" Header="{x:Static localization:Resources.MiscellaneousSyncSettingHeader_resx}" Visibility="Collapsed">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="90*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25*"/>
                            <RowDefinition Height="25*"/>
                            <RowDefinition Height="25*"/>
                        </Grid.RowDefinitions>

                        <CheckBox x:Name="chkCloundSync" Grid.Column="0"  Grid.Row="0" IsChecked="{Binding IsCloudSyncMenuVisible,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                 Height="40"   Padding="3 0 0 0" Background="#373E46" BorderBrush="Gray" FontWeight="Normal" FontSize="14" 
                                 HorizontalAlignment="Center" VerticalAlignment="Center"  Command="{Binding SaveSettingCommand}"/>
                        <TextBlock Grid.Column="1"  Grid.Row="0"   Text="{x:Static localization:Resources.MiscellaneousSyncSettingVisibilityText_resx}" FontSize="14" VerticalAlignment="Center"/>



                        <!--<TextBlock Grid.Row="1" Grid.Column="0" Text="Sync Cloud Days" FontSize="14" VerticalAlignment="Center"
                                   Visibility="Collapsed"/>
                        <TextBox Grid.Row="1" Height="32" Grid.Column="1" x:Name="txt_NoOfDays" Text="{Binding SyncCloudDays,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" TextChanged="txt_NoOfDays_TextChanged"
                                 Visibility="Collapsed" Padding="3 0 0 0" Background="#373E46" BorderBrush="Gray" FontWeight="Normal" FontSize="14" Margin="4">
                        </TextBox>-->

                        <DockPanel Grid.Row="2" Grid.ColumnSpan="2" Visibility="Collapsed">
                            <TextBlock x:Name="errorMessage_NoOfDays" Visibility="Collapsed" DockPanel.Dock="Left" Foreground="Red" TextWrapping="WrapWithOverflow"/>
                            <Border BorderBrush="{DynamicResource BrownBrush}" BorderThickness="1.5" CornerRadius="15" 
        Cursor="Hand" Height="30" Width="90" HorizontalAlignment="Right" Margin="0 0 5 0">
                                <TextBlock Text="Save" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <i:InvokeCommandAction Command="{Binding SaveSettingCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Red"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding ElementName=errorMessage,Path=Text}" Value="">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=errorMessage,Path=Text}" Value="{x:Null}">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </DockPanel>

                    </Grid>

                </GroupBox>



                <GroupBox Grid.Row="1" Grid.Column="0" Header="{x:Static localization:Resources.MiscellaneousgGeneralCockpitSettingHeader_resx}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="90*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20*"/>
                            <RowDefinition Height="20*"/>
                            <RowDefinition Height="60*"/>
                        </Grid.RowDefinitions>

                        <!--**************Anonmized Patients Name Settings-->
                        <CheckBox x:Name="chkAnomizedPatientName"  Grid.Row="0"   Grid.Column="1" 
                                   Height="40"   Padding="3 0 0 0" Background="#373E46" BorderBrush="Gray" FontWeight="Normal" FontSize="14" 
                                 Command="{Binding SaveGeneralSettingsCommand}" CommandParameter="{Binding ElementName=chkAnomizedPatientName}"  Tag="Anonymized"/>
                        <TextBlock Grid.Column="2"  Text="{x:Static localization:Resources.MiscellaneousAnonymizedSettingText_resx}" FontSize="14" VerticalAlignment="Center" Grid.ColumnSpan="2" HorizontalAlignment="Left"/>

                        <CheckBox x:Name="chkServiceTabVisibility"  Grid.Row="1" Grid.Column="1"  Visibility="Collapsed"
                                   Height="40"   Padding="3 0 0 0" Background="#373E46" BorderBrush="Gray" FontWeight="Normal" FontSize="14"
                                  Command="{Binding SaveGeneralSettingsCommand}" CommandParameter="{Binding ElementName=chkServiceTabVisibility}" Tag="ServiceTab"/>
                        <TextBlock Grid.Column="2"  Grid.Row="1" Text="{x:Static localization:Resources.MiscellaneousServiceTabVisibility_resx}" FontSize="14" VerticalAlignment="Center" Grid.ColumnSpan="2" HorizontalAlignment="Left"  Visibility="Collapsed" />

                    </Grid>

                </GroupBox>

                
                
                
               <!--**************************************** AWS CONFIGURATION SETTINGS *********************************************************-->
                <GroupBox Grid.Row="1" Grid.Column="2" Header="{x:Static localization:Resources.MiscellaneousgAWSConfigurationHeader_resx}" Visibility="Collapsed">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30*"/>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="65*"/>
                            <ColumnDefinition Width="10*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15*"/>
                            <RowDefinition Height="15*"/>
                            <RowDefinition Height="15*"/>
                            <RowDefinition Height="15*"/>
                            <RowDefinition Height="15*"/>
                            <RowDefinition Height="25*"/>
                        </Grid.RowDefinitions>

                        <!--***********************BUCKET *****************************************************-->
                        <TextBlock Text="{x:Static localization:Resources.AWSBucketHeaderTxt_resx}" FontSize="14" VerticalAlignment="Center" Grid.ColumnSpan="2" HorizontalAlignment="Left"/>
                        <TextBox Grid.Column="2"  Style="{DynamicResource MiscelleousConfigurationTxtboxStyle}" Text="{Binding MiscellaneousAWSConfiguration.AWSBucketName,UpdateSourceTrigger=PropertyChanged}"/>


                        <!--***********************ACCESS KEY *****************************************************-->
                        <TextBlock Grid.Row="1"  Grid.Column="0" Text="{x:Static localization:Resources.AWSAccessKeyHeaderTxt_resx}" FontSize="14" VerticalAlignment="Center" Grid.ColumnSpan="2" HorizontalAlignment="Left"/>
                        <Grid Grid.Row="1" Grid.Column="2">
                            <!--Masked Password Pannel-->
                            <Grid x:Name="MaskedPasswordPannel" Visibility="{Binding IsAWSAccessKeyMasked, Converter={StaticResource InvertBooleanConverter}}">
                                <PasswordBox x:Name="accessKey" common:BoundPasswordBox.Attach="True" common:BoundPasswordBox.Password="{Binding  MiscellaneousAWSConfiguration.AWSAccessKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5" PasswordChar="*" DockPanel.Dock="Left" Style="{StaticResource EditPasswordBoxStyle}" />
                                <Image x:Name="ImgLockIcon" Width="18.0" Height="18.0" Margin="11,5,10,5" Cursor="Hand" Source="{StaticResource Icon_EyeVision}" HorizontalAlignment="Right">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown">
                                            <i:InvokeCommandAction Command="{Binding PasswordToggleCommand}"  CommandParameter="AccessKey" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                            </Grid>
                            <!--String Password Pannel-->
                            <Grid x:Name="StringPasswordPannel" Visibility="{Binding IsAWSAccessKeyMasked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBox x:Name="accessPasswordString" Margin="0,0,0,5" Text="{Binding  MiscellaneousAWSConfiguration.AWSAccessKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}" />
                                <Image x:Name="ImgEyeVisionIcon" Width="18.0" Height="18.0" Margin="11,5,10,5" Cursor="Hand" Source="{StaticResource Icon_Eye}" HorizontalAlignment="Right">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown">
                                            <i:InvokeCommandAction Command="{Binding PasswordToggleCommand}" CommandParameter="AccessKey" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                            </Grid>
                        </Grid>

                        
                        <!--***********************SECRET KEY *****************************************************-->
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static localization:Resources.AWSSecretKeyHeaderTxt_resx}" FontSize="14" VerticalAlignment="Center" Grid.ColumnSpan="2" HorizontalAlignment="Left"/>
                        <Grid Grid.Row="2" Grid.Column="2">
                            <!--Masked Password Pannel-->
                            <Grid x:Name="secretKeyMaskedPannel" Visibility="{Binding IsAWSSecretKeyMasked, Converter={StaticResource InvertBooleanConverter}}">
                                <PasswordBox x:Name="secretKey" common:BoundPasswordBox.Attach="True" common:BoundPasswordBox.Password="{Binding  MiscellaneousAWSConfiguration.AWSSecretKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5" PasswordChar="*" DockPanel.Dock="Left" Style="{StaticResource EditPasswordBoxStyle}" />
                                <Image x:Name="ImgLockIcon_secret" Width="18.0" Height="18.0" Margin="11,5,10,5" Cursor="Hand" Source="{StaticResource Icon_EyeVision}" HorizontalAlignment="Right">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown">
                                            <i:InvokeCommandAction Command="{Binding PasswordToggleCommand}"  CommandParameter="SecretKey" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                            </Grid>
                            <!--String Password Pannel-->
                            <Grid x:Name="secretKeyStringPannelString" Visibility="{Binding IsAWSSecretKeyMasked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBox x:Name="secretString" Margin="0,0,0,5" Text="{Binding  MiscellaneousAWSConfiguration.AWSSecretKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}" />
                                <Image x:Name="ImgEyeVisionIcon_secret" Width="18.0" Height="18.0" Margin="11,5,10,5" Cursor="Hand" Source="{StaticResource Icon_Eye}" HorizontalAlignment="Right">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown">
                                            <i:InvokeCommandAction Command="{Binding PasswordToggleCommand}" CommandParameter="SecretKey" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                            </Grid>
                        </Grid>


                        <!--***********************REGION *****************************************************-->
                        <TextBlock  Grid.Row="3" Grid.Column="0" Text="Aws Bucket Region" FontSize="14" VerticalAlignment="Center" Grid.ColumnSpan="2" HorizontalAlignment="Left"/>
                        <TextBox Grid.Row="3" Grid.Column="2"  Style="{DynamicResource MiscelleousConfigurationTxtboxStyle}" Text="{Binding MiscellaneousAWSConfiguration.AWSBucketRegion,UpdateSourceTrigger=PropertyChanged}"/>


                        <!--***********************LOCATION URL *****************************************************-->
                        <TextBlock  Grid.Row="4" Grid.Column="0" Text="Location URL:" FontSize="14" VerticalAlignment="Center" Grid.ColumnSpan="2" HorizontalAlignment="Left"/>
                        <TextBox Grid.Row="4" Grid.Column="2"  Style="{DynamicResource MiscelleousConfigurationTxtboxStyle}" Text="{Binding MiscellaneousAWSConfiguration.LocationURL,UpdateSourceTrigger=PropertyChanged}"/>


                        <!--***********************SAVE/ UPDATE BUTTON *****************************************************-->
                        <Border Grid.Row="5"  Grid.Column="2" BorderBrush="{DynamicResource BrownBrush}" BorderThickness="1.5" CornerRadius="15" 
                               Cursor="Hand" Height="30" Width="90" HorizontalAlignment="Right" Margin="0 0 5 0">
                            <TextBlock Text="{Binding UpdateSourceTrigger=PropertyChanged, Path= MiscellaneousAWSConfiguration.AWSConfigSubmitText}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown">
                                    <i:InvokeCommandAction Command="{Binding SaveMiscellaneousConfigurationCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Red"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding ElementName=errorMessage,Path=Text}" Value="">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=errorMessage,Path=Text}" Value="{x:Null}">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                        </Border>
                    </Grid>

                </GroupBox>
            </Grid>
        </Border>
    </Grid>
</UserControl>