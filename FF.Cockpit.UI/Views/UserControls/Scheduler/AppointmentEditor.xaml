<Window x:Class="FF.Cockpit.UI.UserControls.AppointmentEditor"
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
        mc:Ignorable="d"
        ResizeMode="NoResize" WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        WindowStartupLocation="CenterOwner" Width="790" SizeToContent="Height"
        xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:themeCtrl="clr-namespace:FF.Cockpit.Theme.Controls;assembly=FF.Cockpit.Theme"
        xmlns:localisation="clr-namespace:FF.Cockpit.Common.Properties;assembly=FF.Cockpit.Common"
        xmlns:uc="clr-namespace:FF.Cockpit.UI.UserControls" Deactivated="Window_Deactivated"
        xmlns:con="clr-namespace:FF.Cockpit.Theme.Converters;assembly=FF.Cockpit.Theme"
        xmlns:converter="clr-namespace:FF.Cockpit.UI.Converters">

    <behaviours:Interaction.Triggers>
        <behaviours:EventTrigger EventName="Closing">
            <behaviours:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.ClosingCommand}"
                                                        PassEventArgsToCommand="True"/>
        </behaviours:EventTrigger>
    </behaviours:Interaction.Triggers>

    <Window.Resources>
        <converter:AnonymizeStringConverter x:Key="AnonymizeConverter"/>
        <con:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <BooleanToVisibilityConverter x:Key="boolVisiConv"/>
        <syncfusion:ReminderTimeIntervalConverter x:Key="ReminderTimeIntervalConverter"/>
        <Style x:Key="CalendarStyle" TargetType="{x:Type Calendar}">
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                            <CalendarItem Template="{DynamicResource CalendarItemTemplate}"
                                          x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" 
                                          BorderThickness="{TemplateBinding BorderThickness}" Background="White"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CalendarCalendarDayButtonStyle1" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="MinWidth" Value="5"/>
            <Setter Property="MinHeight" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="HighlightBackground" To="0.5" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="HighlightBackground" To="0.5" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <!--<Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="HighlightBackground" To="0" Storyboard.TargetProperty="Opacity"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="NormalText" To=".35" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>-->
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedBackground" To=".75" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Active"/>
                                    <VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="NormalText" To="#FF777777" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="RegularDay"/>
                                    <VisualState x:Name="Today">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="TodayBackground" To=".6" Storyboard.TargetProperty="Opacity"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="NormalText" To="#FF7C644C" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BlackoutDayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NormalDay"/>
                                    <VisualState x:Name="BlackoutDay">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="Blackout" To="0.9" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="TodayBackground" Fill="#FF7C644C" Opacity="0" RadiusX="1" RadiusY="1"/>
                            <Rectangle x:Name="SelectedBackground" Fill="#FF7C644C" Opacity="0" RadiusX="1" RadiusY="1"/>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Rectangle x:Name="HighlightBackground" Fill="#FF7C644C" Opacity="0" RadiusX="1" RadiusY="1"/>
                            <ContentPresenter x:Name="NormalText" TextElement.Foreground="#FF000000" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1,5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Path x:Name="Blackout" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" Fill="#FF000000" HorizontalAlignment="Stretch" Margin="3" Opacity="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Stretch"/>
                            <Rectangle x:Name="DayButtonFocusVisual" IsHitTestVisible="false" RadiusX="1" RadiusY="1" Stroke="#FF7C644C" Visibility="Collapsed"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CalendarCalendarButtonStyle1" TargetType="{x:Type CalendarButton}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="MinHeight" Value="42"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="Background" To=".5" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="Background" To=".5" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedBackground" To=".75" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Active"/>
                                    <VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="NormalText" To="#FF777777" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CalendarButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CalendarButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="SelectedBackground" Fill="{TemplateBinding Background}" Opacity="0" RadiusX="1" RadiusY="1" />
                            <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Opacity="0" RadiusX="1" RadiusY="1"/>
                            <ContentPresenter x:Name="NormalText" TextElement.Foreground="#FF7C644C" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,1,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="CalendarButtonFocusVisual" IsHitTestVisible="false" RadiusX="1" RadiusY="1" Stroke="#FF7C644C" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Visibility" TargetName="CalendarButtonFocusVisual" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AutoCompleteListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource WorkBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template" Value="{DynamicResource AutoCompleteListBoxControlTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource AutoCompleteListBoxItemStyle}"/>
        </Style>

        <ControlTemplate x:Key="AutoCompleteListBoxControlTemplate" TargetType="{x:Type ListBox}">
            <Border x:Name="Border" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                Background="{TemplateBinding Background}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                SnapsToDevicePixels="True">
                <ScrollViewer Focusable="False" 
                          Padding="{TemplateBinding Padding}" 
                          Template="{DynamicResource AutoCompleteScrollViewerControlTemplate}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </ScrollViewer>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="AutoCompleteScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid>
                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                    Grid.ColumnSpan="2"
    				CanContentScroll="{TemplateBinding CanContentScroll}" 
    				ContentTemplate="{TemplateBinding ContentTemplate}" 
    				Content="{TemplateBinding Content}" 
    				Margin="{TemplateBinding Padding}"/>
                    <ScrollBar x:Name="PART_VerticalScrollBar" 
    				Grid.Column="1" 
    				AutomationProperties.AutomationId="VerticalScrollBar" 
    				Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" 
    				Minimum="0" 
    				Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
    				Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
    				ViewportSize="{TemplateBinding ViewportHeight}"
    				Margin="0 17 0 0"/>
                    <ScrollBar x:Name="PART_HorizontalScrollBar" 
    				Grid.Row="1" 
    				Orientation="Horizontal" 
    				AutomationProperties.AutomationId="HorizontalScrollBar" 
    				Cursor="Arrow"  
    				Maximum="{TemplateBinding ScrollableWidth}"
    				Minimum="0" 
    				Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
    				Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
    				ViewportSize="{TemplateBinding ViewportWidth}"/>
                    <ResizeGrip x:Name="ResizeGrip" Grid.Row="1"  Grid.Column="1"  VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNWSE"/>
                </Grid>
            </Grid>
        </ControlTemplate>

        <Style x:Key="AutoCompleteResizeGripStyle" TargetType="{x:Type ResizeGrip}"/>

        <Style x:Key="AutoCompleteListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5*"/>
                                    <ColumnDefinition Width="50*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="25*"/>
                                </Grid.ColumnDefinitions>
                                <!--<Image x:Name="imgGenderMale" Source="{DynamicResource DashboardPatientMale}" Width="155" Margin="3,3,10,3" Visibility="{Binding Gender, ConverterParameter=m }" Height="16"/>
                                <Image x:Name="imgGenderFemale" Source="{DynamicResource DashboardPatientFemale}" Width="16" Margin="3,3,10,3" Visibility="{Binding Gender, ConverterParameter=f}" Height="16"/>-->
                                <TextBlock x:Name="tbName" Text="{Binding PatientName,Converter={StaticResource AnonymizeConverter}}" Grid.Column="1" Margin="0,0,0,0" Width="350"  TextWrapping="Wrap"/>
                                <!--<TextBlock x:Name="tbDateOfBirth" Text="{Binding DateOfBirth,StringFormat=d}" Grid.Column="2" Margin="0,0,10,0"/>-->
                                <TextBlock x:Name="tbPatientId" Text="{Binding ConcatpatientRecordnumber}" Grid.Column="3"  Margin="0,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="3">
        <Grid Background="#22262B">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border Background="#81684E" BorderBrush="Gray" BorderThickness="0 0 0 1">
                <Grid Margin="10 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80*"/>
                        <ColumnDefinition Width="20*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel>
                        <TextBlock Foreground="#FFFFFF" FontWeight="Medium" FontSize="14"  
                               HorizontalAlignment="Left" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="{x:Static localisation:Resources.AppointmentEditor_EditAppointmentHeader_resx}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsNewAppointment}" Value="True">
                                            <Setter Property="Text" Value="{x:Static localisation:Resources.AppointmentEditor_NewAppointmentHeader_resx}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                    </DockPanel>
                    <Button Grid.Column="1" x:Name="CloseButton" Width="20" 
                            Style="{DynamicResource OpacityButton}" HorizontalAlignment="Right" 
                            WindowChrome.IsHitTestVisibleInChrome="True" Click="CloseButton_Click" IsCancel="True">
                        <Path Width="12" Height="12" Stroke="White" StrokeThickness="2.2" Stretch="Fill" 
                              Data="{DynamicResource CloseX}" />
                    </Button>
                </Grid>
            </Border>

            <StackPanel Grid.Row="1" Margin="10" Background="#22262B">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDatePassed}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <DockPanel>
                    <DockPanel>
                        <DockPanel>
                            <TextBlock Text="{x:Static localisation:Resources.AppointmentEditor_PatientSelectionTitle_resx}" Style="{StaticResource DefaultTextblockStyle}" DockPanel.Dock="Top"/>
                            <Grid>
                                <TextBox x:Name="TbxSearchPatient" Height="24"                      
                                 Text="{Binding UpdateSourceTrigger=PropertyChanged,Path=SearchedText}"
                                 Padding="3 0 0 0" Background="#373E46" 
                                 BorderBrush="Gray" FontWeight="Normal" FontSize="14"
                                 SelectionOpacity="0" ForceCursor="True" CaretBrush="{DynamicResource ForegroundBrush}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="KeyUp">
                                            <i:InvokeCommandAction Command="{Binding DocumentType_KeyUpCommand,UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding ElementName=TbxSearchPatient, Path=Text}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>

                                <Popup x:Name="autoCompletorListPopup" MinHeight="400" 
                                   StaysOpen="False"  AllowsTransparency="True" IsOpen="{Binding IsAutoCompletorPopupOpen,UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"
                                   PlacementTarget="{Binding ElementName=TbxSearchPatient}" Placement="Bottom" >
                                    <ListBox x:Name="autoCompletorList" Style="{StaticResource AutoCompleteListBoxStyle}"    
                                      Width="{Binding ActualWidth, ElementName=TbxSearchPatient}" 
                                      MaxHeight="400" Margin="5 0,0,0" 
                                      ItemsSource="{Binding SearchedPatientList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding AutoCompletorListSelectionChangedCommand}" CommandParameter="{Binding ElementName=autoCompletorList, Path=SelectedItem}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding DocumentType_LostFocusCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding ElementName=autoCompletorList, Path=SelectedItem}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ListBox>
                                </Popup>
                            </Grid>
                        </DockPanel>
                    </DockPanel>
                </DockPanel>

                <DockPanel Margin="0 10 0 0">
                    <DockPanel Margin="0 0 9 0" Width="278">
                        <TextBlock Text="{x:Static localisation:Resources.AppointmentEditor_AppointmentTypeTitle_resx}" Style="{StaticResource DefaultTextblockStyle}" DockPanel.Dock="Top"/>
                        <ComboBox x:Name="appointmentTypeCMB"
                                  DisplayMemberPath="AppointmentTypeName"
                                  SelectedValuePath="AppointmentTypeId"
                                  SelectedValue="{Binding SelectedAppointmentTypeId}"
                                  Padding="3 0 0 0" Background="#373E46"
                                  BorderBrush="Gray" FontWeight="Normal" FontSize="14"/>
                    </DockPanel>

                    <DockPanel Width="280" Margin="3 0 7 0">
                        <TextBlock Text="{x:Static localisation:Resources.AppointmentEditor_RoomSelectionTitle_resx}" Style="{StaticResource DefaultTextblockStyle}" DockPanel.Dock="Top"/>
                        <ComboBox x:Name="roomCMB"
                                  DisplayMemberPath="RoomName"
                                  SelectedValuePath="RoomId"
                                  SelectedValue="{Binding SelectedRoomId}"
                                  Padding="3 0 0 0" Background="#373E46"
                                  BorderBrush="Gray" FontWeight="Normal" FontSize="14"/>
                    </DockPanel>

                    <DockPanel Width="183" Margin="4,0,0,0">
                        <TextBlock Text="{x:Static localisation:Resources.AppointmentEditor_DoctorSelectionTitle_resx}" Style="{StaticResource DefaultTextblockStyle}" DockPanel.Dock="Top"/>
                        <ComboBox x:Name="doctorCMB" 
                                  DisplayMemberPath="UserName"
                                  SelectedValuePath="UserId"
                                  SelectedValue="{Binding SelectedUserId}"
                              Padding="3 0 0 0" Background="#373E46"
                              BorderBrush="Gray" FontWeight="Normal" FontSize="14"/>
                    </DockPanel>

                </DockPanel>

                <DockPanel Margin="0 10 0 0" HorizontalAlignment="Left">
                    <DockPanel Width="280">
                        <TextBlock Text="{x:Static localisation:Resources.AppointmentEditor_StartTimeTitle_resx}" Style="{StaticResource DefaultTextblockStyle}" DockPanel.Dock="Top"/>
                        <DockPanel>
                            <TextBox x:Name="startDateTxtblock" Width="195" Uid="1"                      
                                 Text="{Binding StartDate,StringFormat=d}" 
                                 Padding="3 0 0 0" Background="#373E46" 
                                 BorderBrush="Gray" FontWeight="Normal" FontSize="14"
                                 SelectionOpacity="0" ForceCursor="True" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding OpenCalendarCommand,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                           CommandParameter="{Binding ElementName=startDateTxtblock, Path=Uid}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <Popup x:Name="startDatecalendarPopup" x:FieldModifier="public"
                               Width="{Binding Path=ActualWidth,  RelativeSource={RelativeSource AncestorType=DockPanel}}"
                               IsOpen="{Binding IsCalendarStartDatePopUpOpen,UpdateSourceTrigger=Explicit,Mode=TwoWay}"
                               AllowsTransparency="True" 
                               PlacementTarget="{Binding ElementName=startDateTxtblock}"
                               Placement="Bottom" HorizontalAlignment="Left" >
                                <Calendar x:Name="customStartDate"  Style="{StaticResource CalendarStyle}"  
                                      CalendarButtonStyle="{DynamicResource CalendarCalendarButtonStyle1}" 
                                      CalendarDayButtonStyle="{DynamicResource CalendarCalendarDayButtonStyle1}"
                                      SelectedDate="{Binding StartDate,StringFormat=d,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                      DisplayDateStart="{Binding DisplayDate}" >
                                </Calendar>
                            </Popup>
                        </DockPanel>
                        <ComboBox IsEditable="True" Width="80" x:Name="startTimeList"
                              DisplayMemberPath="Value"
                              SelectedValuePath="Key"
                              SelectedValue="{Binding SelectedAppointmentStartTime,UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"  
                              Padding="3 0 0 0" Background="#373E46" 
                              BorderBrush="Gray" FontWeight="Normal" FontSize="14"
                              SelectionChanged="startTimeList_SelectionChanged">
                        </ComboBox>
                    </DockPanel>


                    <DockPanel Width="280" Margin="10 0 0 0">
                        <TextBlock Text="{x:Static localisation:Resources.AppointmentEditor_EndTimeTitle_resx}" Style="{StaticResource DefaultTextblockStyle}" DockPanel.Dock="Top"/>
                        <TextBox x:Name="endDateTxtbox" Width="195"  Uid="2"                    
                                 Text="{Binding EndDate,StringFormat=d}" 
                                 Padding="3 0 0 0" Background="#373E46" 
                                 BorderBrush="Gray" FontWeight="Normal" FontSize="14"
                                 SelectionOpacity="0" ForceCursor="True" IsEnabled="False">
                        </TextBox>
                        <ComboBox  x:Name="endTimeList" Width="80" Margin="3 0 0 0"
                              DisplayMemberPath="Value"
                              SelectedValuePath="Key"
                              SelectedValue="{Binding SelectedAppointmentEndTime,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                              Padding="3 0 0 0" Background="#373E46" 
                              BorderBrush="Gray" FontWeight="Normal" FontSize="14"
                              SelectionChanged="endTimeList_SelectionChanged"
                              ForceCursor="True" IsEnabled="False"/>
                    </DockPanel>

                    <DockPanel Width="183" Margin="15 0 0 0">
                        <TextBlock Text="{x:Static localisation:Resources.AppointmentEditor_DurationSelectionTitle_resx}" Style="{StaticResource DefaultTextblockStyle}" DockPanel.Dock="Top"/>
                        <ComboBox x:Name="durationCMB" 
                                  DisplayMemberPath="Value"
                                  SelectedValuePath="Key"
                                  SelectedValue="{Binding SelectedDuration}"
                                  Padding="3 0 0 0" Background="#373E46"
                                  BorderBrush="Gray" FontWeight="Normal" FontSize="14"
                                  SelectionChanged="durationCMB_SelectionChanged"/>
                    </DockPanel>

                </DockPanel>

                <DockPanel Margin="0 10 0 0" >
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Appointment.RecursiveId}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsNewAppointment}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>
                    <RadioButton x:Name="radioCurrentBtn" Content="{x:Static localisation:Resources.AppointmentEditor_RecurrenceEditRadioButton1_resx}" GroupName="recurrenceEdit" />
                    <RadioButton Content="{x:Static localisation:Resources.AppointmentEditor_RecurrenceEditRadioButton2_resx}" GroupName="recurrenceEdit" Margin="15 0 0 0" IsChecked="{Binding Appointment.IsFullSeriesAppointmentEdit}"/>
                </DockPanel>

                <DockPanel Margin="0 10 7 0" Width="195" HorizontalAlignment="Left">
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=radioCurrentBtn,Path=IsChecked}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>
                    <TextBlock Text="{x:Static localisation:Resources.AppointmentEditor_RecurrencelblTitle_resx}" Style="{StaticResource DefaultTextblockStyle}" DockPanel.Dock="Top"/>
                    <themeCtrl:ToggleSwitch x:Name="recurrenceToggle" Style="{DynamicResource ToggleSwitchStyle}"   
                                                IsChecked="{Binding Appointment.IsRecurrence,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                Background="#373E46" 
                                                BorderBrush="Gray" FontWeight="Normal" FontSize="14"/>
                    <ComboBox x:Name="recurrenceCMB" Width="100"  Margin="5,0,0,0"
                                  DisplayMemberPath="Value"
                                  SelectedValuePath="Key"
                                  SelectedValue="{Binding SelectedRecurrenceMonth}"
                                  Padding="3 0 0 0" Background="#373E46"
                                  BorderBrush="Gray" FontWeight="Normal" FontSize="14"
                                  Visibility="{Binding Appointment.IsRecurrence,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,Converter={StaticResource boolVisiConv}}"/>
                </DockPanel>


                <DockPanel Margin="0 10 0 0" Height="70">
                    <TextBlock Text="{x:Static localisation:Resources.AppointmentEditor_RecurrenceDescriptionTitle_resx}" DockPanel.Dock="Top" Style="{StaticResource DefaultTextblockStyle}"/>
                    <TextBox Text="{Binding Appointment.Notes}" TextWrapping="Wrap" 
                             Padding="3 0 0 0" Background="#373E46"
                             BorderBrush="Gray" FontWeight="Normal" FontSize="14"/>
                </DockPanel>

                <DockPanel Margin="0 12 0 0" HorizontalAlignment="Right">
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsDatePassed}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>
                    <Button x:Name="Save" Height="30" Width="90" Command="{Binding SaveCommand}" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource FotoFinderButtonStyle}">
                                <Setter Property="Content" Value="{x:Static localisation:Resources.UpdateButton_resx}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsNewAppointment}" Value="True">
                                        <Setter Property="Content" Value="{x:Static localisation:Resources.SaveButton_resx}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="Cancel" Height="30" Width="90" Content="{x:Static localisation:Resources.CancelButton_resx}" Command="{Binding CancelCommand}" 
                                Margin="8 0" Style="{StaticResource FotoFinderButtonStyle}"/>
                    <Button x:Name="Delete" Height="30" Width="90" Content="{x:Static localisation:Resources.DeleteButton_resx}" Command="{Binding DeleteCommand}" 
                                Style="{StaticResource FotoFinderButtonStyle}"/>
                </DockPanel>

            </StackPanel>

        </Grid>
    </Border>

</Window>